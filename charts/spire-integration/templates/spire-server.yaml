{{- if .Values.server.enabled }}
# SPIRE Server StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spire-server
  namespace: spire-system
  labels:
    app: spire-server
    {{- include "spire-integration.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: spire-server
  selector:
    matchLabels:
      app: spire-server
  template:
    metadata:
      labels:
        app: spire-server
        {{- include "spire-integration.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.rbac.serviceAccount.server.name }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: spire-server
        image: "{{ .Values.global.image.registry }}/{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        args:
          - -config
          - /opt/spire/conf/server/server.conf
        ports:
        - name: grpc
          containerPort: 8081
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /live
            port: health
          initialDelaySeconds: 15
          periodSeconds: 60
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: health
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          {{- toYaml .Values.server.resources | nindent 10 }}
        volumeMounts:
        - name: spire-config
          mountPath: /opt/spire/conf/server
          readOnly: true
        - name: spire-data
          mountPath: /opt/spire/data
        - name: spire-sockets
          mountPath: /opt/spire/sockets
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      volumes:
      - name: spire-config
        configMap:
          name: spire-server-config
      - name: spire-sockets
        emptyDir: {}
  {{- if .Values.server.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: spire-data
    spec:
      accessModes: ["ReadWriteOnce"]
      {{- if .Values.server.persistence.storageClass }}
      storageClassName: {{ .Values.server.persistence.storageClass }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.server.persistence.size }}
  {{- else }}
      - name: spire-data
        emptyDir: {}
  {{- end }}
---
# SPIRE Server Service
apiVersion: v1
kind: Service
metadata:
  name: spire-server
  namespace: spire-system
  labels:
    app: spire-server
    {{- include "spire-integration.labels" . | nindent 4 }}
spec:
  type: {{ .Values.server.service.type }}
  ports:
  - name: grpc
    port: {{ .Values.server.service.port }}
    targetPort: grpc
    protocol: TCP
  - name: health
    port: 8080
    targetPort: health
    protocol: TCP
  selector:
    app: spire-server
{{- end }}