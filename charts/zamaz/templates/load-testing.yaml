apiVersion: k6.io/v1alpha1
kind: TestRun
metadata:
  name: {{ include "zamaz.fullname" . }}-load-test
spec:
  parallelism: 3
  script:
    configMap:
      name: {{ include "zamaz.fullname" . }}-load-test-script
      file: test.js
  runner:
    image: loadimpact/k6:latest
    env:
      - name: TARGET_URL
        value: "http://{{ include "zamaz.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local"
      - name: DURATION
        value: "30m"
      - name: VUS
        value: "100"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "zamaz.fullname" . }}-load-test-script
data:
  test.js: |
    import http from 'k6/http';
    import { check, sleep } from 'k6';

    export let options = {
      stages: [
        { duration: '5m', target: 50 },   // Ramp up
        { duration: '20m', target: 100 }, // Sustained load
        { duration: '5m', target: 0 },    // Ramp down
      ],
      thresholds: {
        http_req_duration: ['p(95)<500'], // 95% of requests must complete within 500ms
        http_req_failed: ['rate<0.01'],   // Error rate must be below 1%
      },
    };

    export default function() {
      const BASE_URL = __ENV.TARGET_URL;

      // Test main API endpoints
      let responses = http.batch([
        ['GET', `${BASE_URL}/api/v1/health`],
        ['GET', `${BASE_URL}/api/v1/status`],
        ['POST', `${BASE_URL}/api/v1/auth/verify`],
      ]);

      // Verify responses
      responses.forEach(response => {
        check(response, {
          'status is 200': (r) => r.status === 200,
          'response time < 500ms': (r) => r.timings.duration < 500,
        });
      });

      sleep(1);
    }

