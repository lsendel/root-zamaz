admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }
  # Enable more detailed statistics for performance monitoring
  access_log:
    - name: envoy.access_loggers.file
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
        path: "/dev/stdout"
        format: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%UPSTREAM_HOST%\"\n"

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 8080 }
    # Add TCP keepalive for better connection management
    tcp_keepalive:
      keepalive_time: 30s
      keepalive_probes: 3
      keepalive_interval: 5s
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          # Add request timeout to prevent hanging connections
          request_timeout: 60s
          # Add idle timeout to clean up inactive connections
          stream_idle_timeout: 300s
          # Enable tracing for performance analysis
          tracing:
            provider:
              name: envoy.tracers.zipkin
              typed_config:
                "@type": type.googleapis.com/envoy.config.trace.v3.ZipkinConfig
                collector_endpoint: "http://jaeger:9411/api/v2/spans"
                collector_endpoint_version: HTTP_JSON
                shared_span_context: false
          generate_request_id: true
          use_remote_address: true
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route: 
                  cluster: mvp_service
                  # Add timeout for upstream requests
                  timeout: 30s
                  # Add retry policy for resilience
                  retry_policy:
                    retry_on: connect-failure,refused-stream,unavailable,5xx
                    num_retries: 3
                    per_try_timeout: 5s
              # Add a health check endpoint
              - match: { path: "/health" }
                direct_response:
                  status: 200
                  body: { inline_string: "healthy" }
          http_filters:
          # Add buffer filter to prevent memory issues with large requests
          - name: envoy.filters.http.buffer
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.buffer.v3.Buffer
              max_request_bytes: 1048576  # 1MB limit
              max_request_time: 5s
          # Add basic rate limiting to prevent overload
          - name: envoy.filters.http.local_ratelimit
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
              stat_prefix: http_local_rate_limiter
              token_bucket:
                max_tokens: 1000
                tokens_per_fill: 100
                fill_interval:
                  seconds: 1
          # Add compression for better performance
          - name: envoy.filters.http.compressor
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
              content_type:
                - application/json
                - text/html
                - text/plain
              compression_level: 6
              content_length: 1024
          # Router must be the last filter
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: mvp_service
    connect_timeout: 30s
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    # Add circuit breakers to prevent cascading failures
    circuit_breakers:
      thresholds:
        - priority: DEFAULT
          max_connections: 100
          max_pending_requests: 1000
          max_requests: 1000
          max_retries: 3
    # Add health checks to detect and avoid unhealthy backends
    health_checks:
      - timeout: 5s
        interval: 10s
        healthy_threshold: 2
        unhealthy_threshold: 3
        http_health_check:
          path: "/health"
          expected_statuses:
            - start: 200
              end: 299
    # Add HTTP/2 support for better multiplexing
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options:
            max_concurrent_streams: 100
            initial_stream_window_size: 65536  # 64 KiB
            initial_connection_window_size: 1048576  # 1 MiB
    load_assignment:
      cluster_name: mvp_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: host.docker.internal
                port_value: 8080