# Production Dockerfile with service discovery support
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm ci --only=production

# Copy source code
COPY . .

# Build the app with production optimizations
ENV NODE_ENV=production
ENV VITE_BUILD_TARGET=kubernetes
RUN npm run build

# Production stage with nginx
FROM nginx:alpine

# Install lua module for dynamic upstream resolution
RUN apk add --no-cache nginx-mod-http-lua

# Copy built assets
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration (will be overridden by ConfigMap in K8s)
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Create nginx user and set permissions
RUN addgroup -g 101 -S nginx && \
    adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx && \
    chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Create service discovery health check script
RUN echo '#!/bin/sh\n\
# Health check script for service discovery\n\
API_HOST=${API_HOST:-"zamaz-api-service.zamaz.svc.cluster.local"}\n\
API_PORT=${API_PORT:-"8080"}\n\
\n\
# Check if API is reachable\n\
if wget -q --timeout=5 --tries=1 --spider "http://${API_HOST}:${API_PORT}/health" 2>/dev/null; then\n\
    echo "API service is healthy"\n\
    exit 0\n\
else\n\
    echo "API service is not reachable"\n\
    exit 1\n\
fi' > /usr/local/bin/health-check.sh && \
    chmod +x /usr/local/bin/health-check.sh

# Add startup script for environment variable injection
RUN echo '#!/bin/sh\n\
# Inject environment variables into config.js\n\
envsubst < /usr/share/nginx/html/config/config.template.js > /usr/share/nginx/html/config/config.js\n\
\n\
# Start nginx\n\
exec nginx -g "daemon off;"' > /usr/local/bin/start.sh && \
    chmod +x /usr/local/bin/start.sh

# Create config template
RUN mkdir -p /usr/share/nginx/html/config && \
    echo 'window.APP_CONFIG = {\n\
  API_BASE_URL: "${VITE_API_BASE_URL:-/api}",\n\
  SERVICE_DISCOVERY: {\n\
    ENABLED: ${VITE_SERVICE_DISCOVERY_ENABLED:-true},\n\
    PROVIDER: "${VITE_SERVICE_DISCOVERY_PROVIDER:-kubernetes}",\n\
    NAMESPACE: "${VITE_K8S_NAMESPACE:-zamaz}",\n\
    API_SERVICE: "${VITE_API_SERVICE_NAME:-zamaz-api-service}",\n\
    HEALTH_CHECK_INTERVAL: ${VITE_HEALTH_CHECK_INTERVAL:-30000},\n\
    FALLBACK_ENABLED: ${VITE_FALLBACK_ENABLED:-true}\n\
  },\n\
  FEATURES: {\n\
    CIRCUIT_BREAKER: ${VITE_ENABLE_CIRCUIT_BREAKER:-true},\n\
    RETRY_LOGIC: ${VITE_ENABLE_RETRY_LOGIC:-true},\n\
    HEALTH_CHECKS: ${VITE_ENABLE_HEALTH_CHECKS:-true},\n\
    LOAD_BALANCING: "${VITE_LOAD_BALANCING:-round-robin}"\n\
  },\n\
  TIMEOUTS: {\n\
    API_TIMEOUT: ${VITE_API_TIMEOUT:-15000},\n\
    HEALTH_CHECK_TIMEOUT: ${VITE_HEALTH_CHECK_TIMEOUT:-5000},\n\
    CONNECTION_TIMEOUT: ${VITE_CONNECTION_TIMEOUT:-10000}\n\
  }\n\
};' > /usr/share/nginx/html/config/config.template.js

# Switch to non-root user
USER nginx

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD /usr/local/bin/health-check.sh

EXPOSE 80

CMD ["/usr/local/bin/start.sh"]