# GoReleaser optimized Dockerfile for production builds
# This Dockerfile is specifically designed for use with GoReleaser
# and receives pre-built binaries rather than building from source

FROM alpine:3.19

# Install ca-certificates for TLS connections and tzdata for timezone support
RUN apk --no-cache add ca-certificates tzdata

# Create non-root user
RUN addgroup -g 1000 -S zamaz && \
    adduser -u 1000 -S zamaz -G zamaz

# Set working directory
WORKDIR /app

# Copy the binary from GoReleaser build context
COPY zamaz-auth-service /app/

# Copy configuration files
COPY configs/ /app/configs/

# Create necessary directories with proper permissions
RUN mkdir -p /app/logs /app/tmp /app/cache && \
    chown -R zamaz:zamaz /app

# Switch to non-root user
USER zamaz

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD ["/app/zamaz-auth-service", "health-check"]

# Expose port
EXPOSE 8080

# Set default environment variables
ENV GIN_MODE=release
ENV LOG_LEVEL=info
ENV PORT=8080

# Labels for container metadata
LABEL org.opencontainers.image.title="Zamaz Auth Service" \
      org.opencontainers.image.description="Zero Trust Authentication Service with Service Discovery" \
      org.opencontainers.image.vendor="Zamaz" \
      org.opencontainers.image.source="https://github.com/zamaz/root-zamaz" \
      org.opencontainers.image.documentation="https://github.com/zamaz/root-zamaz/blob/main/docs/SERVICE_DISCOVERY.md" \
      org.opencontainers.image.licenses="MIT"

# Run the binary
ENTRYPOINT ["/app/zamaz-auth-service"]
CMD ["server"]