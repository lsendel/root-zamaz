# Zero Trust Authentication Stack - Keycloak Identity Provider
# Part of Framework Integration Plan - Week 1
version: '3.8'

services:
  # PostgreSQL database for Keycloak
  keycloak-postgres:
    image: postgres:15
    container_name: zero-trust-keycloak-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
      POSTGRES_DB: postgres
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
      - ./deployments/keycloak/sql/init-keycloak-db.sql:/docker-entrypoint-initdb.d/01-init-keycloak.sql
    networks:
      - zero-trust-network
    ports:
      - "5433:5432"  # Different port to avoid conflicts with main app DB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: zero-trust-keycloak
    environment:
      # Admin credentials
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin123}
      
      # Database configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak123}
      
      # Server configuration
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_PROXY: edge
      
      # Trust level custom claim configuration
      KC_FEATURES: preview
      
    ports:
      - "8080:8080"
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    command: start-dev --import-realm
    volumes:
      - ./deployments/keycloak/realm-config.json:/opt/keycloak/data/import/realm.json
      - ./deployments/keycloak/themes:/opt/keycloak/themes
      - keycloak_data:/opt/keycloak/data
    networks:
      - zero-trust-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  # Redis for session storage (replacing custom blacklisting)
  redis-sessions:
    image: redis:7-alpine
    container_name: zero-trust-redis-sessions
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis123}
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_sessions_data:/data
    networks:
      - zero-trust-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  zero-trust-network:
    driver: bridge
    name: zero-trust-network

volumes:
  keycloak_postgres_data:
    name: zero-trust-keycloak-postgres-data
  keycloak_data:
    name: zero-trust-keycloak-data
  redis_sessions_data:
    name: zero-trust-redis-sessions-data