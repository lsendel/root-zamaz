name: Documentation

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'requirements-docs.txt'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [main]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'requirements-docs.txt'

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Validate documentation
  validate:
    name: Validate Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for git-revision-date-localized plugin
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-docs.txt
        
    - name: Generate complete documentation
      run: |
        make docs-ci
      env:
        DB_HOST: ${{ secrets.DB_HOST || 'localhost' }}
        DB_PORT: ${{ secrets.DB_PORT || '5432' }}
        DB_NAME: ${{ secrets.DB_NAME || 'mvp_db' }}
        DB_USER: ${{ secrets.DB_USER || 'mvp_user' }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD || 'mvp_password' }}
    
    - name: Validate MkDocs configuration
      run: |
        mkdocs build --strict --verbose
    
    - name: Check for broken links
      run: |
        # Install htmltest for link checking
        curl -s https://htmltest.wjdp.uk | bash
        
        # Test built documentation for broken links
        ./bin/htmltest --conf .htmltest.yml site/ || true

  # Build and deploy documentation
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for git plugins
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-docs.txt
        
    - name: Generate complete documentation
      run: |
        make docs-ci
      env:
        DB_HOST: ${{ secrets.DB_HOST || 'localhost' }}
        DB_PORT: ${{ secrets.DB_PORT || '5432' }}
        DB_NAME: ${{ secrets.DB_NAME || 'mvp_db' }}
        DB_USER: ${{ secrets.DB_USER || 'mvp_user' }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD || 'mvp_password' }}
    
    - name: Configure Git for gh-deploy
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Build documentation
      run: |
        mkdocs build --clean --verbose
    
    - name: Setup Pages
      uses: actions/configure-pages@v5
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './site'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Alternative deployment using mkdocs gh-deploy
  deploy-gh-pages:
    name: Deploy with gh-deploy
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && false  # Disabled by default
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-docs.txt
    
    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Deploy documentation
      run: |
        mkdocs gh-deploy --force --clean --verbose