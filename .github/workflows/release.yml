name: Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0

permissions:
  contents: write # Needed to create releases and upload artifacts
  packages: write # If pushing to GitHub Packages
  # id-token: write # If using OIDC for publishing

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0 # GoReleaser needs full history to determine changes

      - name: Set up Go
        uses: actions/setup-go@v5.5.0
        with:
          go-version: '1.23' # Match other workflows

      - name: Set up QEMU for multi-platform builds (optional)
        uses: docker/setup-qemu-action@v3.6.0
        # Only if your .goreleaser.yml defines cross-platform builds for non-native architectures

      - name: Set up Docker Buildx (optional)
        uses: docker/setup-buildx-action@v3.11.1
        # Only if your .goreleaser.yml builds Docker images

      # Optional: Login to container registry if GoReleaser pushes images
      # - name: Log in to GitHub Container Registry
      #   if: startsWith(github.ref, 'refs/tags/v') # Only for tagged releases
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6.3.0 # Use latest version
        with:
          version: latest # Explicitly use the latest GoReleaser CLI
          args: release --clean # Use --clean to remove dist folder before building
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Optional: if you use a custom .goreleaser.yml path
          # GORELEASER_CONFIG: .goreleaser.yml
