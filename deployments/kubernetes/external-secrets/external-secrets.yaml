# External Secret for Database credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: zamaz-database-secret
  namespace: zamaz-prod
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: zamaz-database-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        database-url: "postgresql://{{ .username }}:{{ .password }}@{{ .host }}:{{ .port }}/{{ .database }}?sslmode=require"
        username: "{{ .username }}"
        password: "{{ .password }}"
        host: "{{ .host }}"
        port: "{{ .port }}"
        database: "{{ .database }}"
  data:
  - secretKey: username
    remoteRef:
      key: zamaz/database
      property: username
  - secretKey: password
    remoteRef:
      key: zamaz/database
      property: password
  - secretKey: host
    remoteRef:
      key: zamaz/database
      property: host
  - secretKey: port
    remoteRef:
      key: zamaz/database
      property: port
  - secretKey: database
    remoteRef:
      key: zamaz/database
      property: database
---
# External Secret for Redis credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: zamaz-redis-secret
  namespace: zamaz-prod
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: zamaz-redis-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        redis-url: "redis://:{{ .password }}@{{ .host }}:{{ .port }}/{{ .database }}"
        password: "{{ .password }}"
        host: "{{ .host }}"
        port: "{{ .port }}"
        database: "{{ .database }}"
  data:
  - secretKey: password
    remoteRef:
      key: zamaz/redis
      property: password
  - secretKey: host
    remoteRef:
      key: zamaz/redis
      property: host
  - secretKey: port
    remoteRef:
      key: zamaz/redis
      property: port
  - secretKey: database
    remoteRef:
      key: zamaz/redis
      property: database
---
# External Secret for JWT secrets
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: zamaz-jwt-secret
  namespace: zamaz-prod
spec:
  refreshInterval: 24h  # Refresh daily for JWT secrets
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: zamaz-jwt-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        jwt-secret: "{{ .jwt_secret }}"
        jwt-signing-key: "{{ .jwt_signing_key }}"
        jwt-refresh-secret: "{{ .jwt_refresh_secret }}"
  data:
  - secretKey: jwt_secret
    remoteRef:
      key: zamaz/auth
      property: jwt_secret
  - secretKey: jwt_signing_key
    remoteRef:
      key: zamaz/auth
      property: jwt_signing_key
  - secretKey: jwt_refresh_secret
    remoteRef:
      key: zamaz/auth
      property: jwt_refresh_secret
---
# External Secret for encryption keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: zamaz-encryption-secret
  namespace: zamaz-prod
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: zamaz-encryption-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        encryption-key: "{{ .encryption_key }}"
        session-secret: "{{ .session_secret }}"
        api-secret: "{{ .api_secret }}"
  data:
  - secretKey: encryption_key
    remoteRef:
      key: zamaz/encryption
      property: encryption_key
  - secretKey: session_secret
    remoteRef:
      key: zamaz/encryption
      property: session_secret
  - secretKey: api_secret
    remoteRef:
      key: zamaz/encryption
      property: api_secret
---
# External Secret for third-party API keys
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: zamaz-api-keys
  namespace: zamaz-prod
spec:
  refreshInterval: 6h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: zamaz-api-keys
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        slack-webhook-url: "{{ .slack_webhook_url }}"
        sendgrid-api-key: "{{ .sendgrid_api_key }}"
        github-token: "{{ .github_token }}"
        monitoring-token: "{{ .monitoring_token }}"
  data:
  - secretKey: slack_webhook_url
    remoteRef:
      key: zamaz/integrations
      property: slack_webhook_url
  - secretKey: sendgrid_api_key
    remoteRef:
      key: zamaz/integrations
      property: sendgrid_api_key
  - secretKey: github_token
    remoteRef:
      key: zamaz/integrations
      property: github_token
  - secretKey: monitoring_token
    remoteRef:
      key: zamaz/integrations
      property: monitoring_token
---
# External Secret for TLS certificates
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: zamaz-tls-secret
  namespace: zamaz-prod
spec:
  refreshInterval: 12h
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: zamaz-tls
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ .tls_cert }}"
        tls.key: "{{ .tls_key }}"
        ca.crt: "{{ .ca_cert }}"
  data:
  - secretKey: tls_cert
    remoteRef:
      key: zamaz/tls
      property: tls_cert
  - secretKey: tls_key
    remoteRef:
      key: zamaz/tls
      property: tls_key
  - secretKey: ca_cert
    remoteRef:
      key: zamaz/tls
      property: ca_cert