# Simple Docker Compose for impl-zamaz projects using root-zamaz components
# This demonstrates how to set up the complete Zero Trust stack using reusable components

version: '3.8'

networks:
  zerotrust-network:
    driver: bridge

volumes:
  postgres_data:
  keycloak_data:

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: zerotrust-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployments/keycloak/sql/init-keycloak-db.sql:/docker-entrypoint-initdb.d/01-init.sql
    ports:
      - "5432:5432"
    networks:
      - zerotrust-network
    restart: unless-stopped

  # Keycloak Identity Provider (from root-zamaz)
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: zerotrust-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak123
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
    ports:
      - "8082:8080"
    depends_on:
      - postgres
    networks:
      - zerotrust-network
    volumes:
      - keycloak_data:/opt/keycloak/data
    command: start-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5

  # OPA Policy Engine (from root-zamaz)
  opa:
    image: openpolicyagent/opa:latest-envoy
    container_name: zerotrust-opa
    ports:
      - "8181:8181"
      - "8282:8282"
    command: 
      - "run"
      - "--server"
      - "--addr=0.0.0.0:8181"
      - "--diagnostic-addr=0.0.0.0:8282"
      - "--set=decision_logs.console=true"
      - "/policies"
    volumes:
      - ./opa/policies:/policies:ro
      - ./opa/data:/data:ro
    environment:
      - OPA_LOG_LEVEL=info
    networks:
      - zerotrust-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Your Application (example implementation using root-zamaz components)
  app:
    build:
      context: .
      dockerfile: Dockerfile.example
    container_name: zerotrust-app
    environment:
      - PORT=8080
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=zerotrust-test
      - KEYCLOAK_CLIENT_ID=zerotrust-client
      - KEYCLOAK_CLIENT_SECRET=zerotrust-secret-12345
      - KEYCLOAK_ADMIN_USER=admin
      - KEYCLOAK_ADMIN_PASS=admin
      - OPA_URL=http://opa:8181
      - GIN_MODE=release
    ports:
      - "8080:8080"
    depends_on:
      keycloak:
        condition: service_healthy
      opa:
        condition: service_healthy
    networks:
      - zerotrust-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (optional, for production deployments)
  redis:
    image: redis:7-alpine
    container_name: zerotrust-redis
    ports:
      - "6379:6379"
    networks:
      - zerotrust-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Envoy Proxy (for advanced use cases)
  envoy:
    image: envoyproxy/envoy:v1.28-latest
    container_name: zerotrust-envoy
    ports:
      - "10000:10000"
      - "9901:9901"
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
    networks:
      - zerotrust-network
    depends_on:
      - opa
      - app
    restart: unless-stopped