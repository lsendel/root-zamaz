apiVersion: component.github.com/v1alpha1
kind: Component
metadata:
  name: go-keycloak-zerotrust-core
  version: 1.0.0
  description: Core Zero Trust authentication library with Keycloak integration
  labels:
    component.type: library
    language: go
    category: authentication
    security.level: enterprise
spec:
  type: library
  language: go
  maintainers:
    - name: Zero Trust Team
      email: zerotrust@yourorg.com
  
  # Dependencies
  dependencies:
    runtime:
      - name: golang.org/x/crypto
        version: ">=0.17.0"
        reason: Cryptographic operations
      - name: github.com/golang-jwt/jwt/v5
        version: ">=5.2.0"
        reason: JWT token handling
      - name: github.com/go-redis/redis/v8
        version: ">=8.11.5"
        reason: Caching layer
      - name: github.com/lib/pq
        version: ">=1.10.9"
        reason: PostgreSQL driver
    
    build:
      - name: go
        version: ">=1.21"
        reason: Go compiler
    
    test:
      - name: github.com/stretchr/testify
        version: ">=1.8.4"
        reason: Testing framework
  
  # Public API
  provides:
    types:
      - zerotrust.Client
      - zerotrust.Config
      - zerotrust.Cache
      - zerotrust.Claims
      - zerotrust.DeviceAttestation
      - zerotrust.RiskAssessment
      - zerotrust.TrustEngine
    
    functions:
      - zerotrust.NewKeycloakClient
      - zerotrust.LoadConfigFromEnv
      - zerotrust.NewRedisCache
      - zerotrust.NewMemoryCache
    
    interfaces:
      - zerotrust.TokenValidator
      - zerotrust.CacheProvider
      - zerotrust.DeviceAttestor
      - zerotrust.RiskAssessor
  
  # Security features
  security:
    attestation:
      - hardware_backed: true
      - platforms: [android, ios, web]
    
    encryption:
      - at_rest: true
      - in_transit: true
      - algorithms: [AES-256-GCM, RSA-4096, ECDSA-P256]
    
    compliance:
      - standards: [SOC2, GDPR, HIPAA]
      - audit_logging: comprehensive
  
  # Performance characteristics
  performance:
    benchmarks:
      token_validation: "<1ms p99"
      device_attestation: "<5ms p99"
      risk_assessment: "<2ms p99"
      cache_operations: "<0.1ms p99"
    
    scalability:
      concurrent_users: "10000+"
      tokens_per_second: "1000+"
      memory_usage: "<100MB"
  
  # Documentation
  documentation:
    readme: README.md
    api_reference: docs/api.md
    examples: examples/
    changelog: CHANGELOG.md
  
  # Installation methods
  installation:
    go_module:
      command: "go get github.com/yourorg/go-keycloak-zerotrust/components/core@v1.0.0"
      import: "github.com/yourorg/go-keycloak-zerotrust/components/core/zerotrust"
    
    container:
      registry: ghcr.io/yourorg/zerotrust-core
      tag: "1.0.0"
      size: "<50MB"
    
    binary:
      platforms: [linux/amd64, linux/arm64, darwin/amd64, darwin/arm64, windows/amd64]
  
  # Configuration schema
  configuration:
    required:
      - keycloak.base_url
      - keycloak.realm
      - keycloak.client_id
      - keycloak.client_secret
    
    optional:
      - cache.type
      - cache.ttl
      - trust.thresholds
      - device.attestation_enabled
      - risk.assessment_enabled
    
    validation:
      schema_url: "https://schemas.yourorg.com/zerotrust/config/v1.json"
  
  # Compatibility
  compatibility:
    go_versions: ["1.21", "1.22", "1.23"]
    os: [linux, darwin, windows]
    architectures: [amd64, arm64]
    
    breaking_changes:
      - version: "2.0.0"
        description: "New configuration format"
        migration_guide: "docs/migration/v1-to-v2.md"
  
  # Quality metrics
  quality:
    test_coverage: ">90%"
    code_quality: "A+"
    security_scan: "passed"
    performance_test: "passed"
    
    badges:
      - name: "Go Report Card"
        url: "https://goreportcard.com/badge/github.com/yourorg/go-keycloak-zerotrust"
      - name: "Coverage"
        url: "https://codecov.io/gh/yourorg/go-keycloak-zerotrust"
  
  # License and legal
  license:
    type: "MIT"
    file: "LICENSE"
    commercial_use: true
    modifications: true
    distribution: true
    private_use: true